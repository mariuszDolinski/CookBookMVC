@using CookBook.Application.IngridientUtils;
@model IEnumerable<CookBook.Application.IngridientUtils.IngridientDto>

@{
    ViewData["Title"] = "Składniki";
    Pagination pages = ViewBag.Pages;
}

<h3>Lista wszystkich dostępnych składników</h3>
<hr />
<div class="row">
    <div class="col-12 col-md-3">
        <div class="mb-3">
            <partial name="_Create" model="new IngridientDto()"/>
        </div>
        <div class="mb-1">
            <partial name="_Search" model="@pages"/>
        </div>
        @if (!string.IsNullOrEmpty(pages.SearchPhrase))
         {
            <div>
                <a asp-action="Index" 
                    asp-route-pageSize="@pages.PageSize" asp-route-sortOrder="@pages.SortOrder"
                    class="btn btn-outline-primary w-100">Wróc do listy wszystkich składników</a>
            </div>               
         }
    </div>
    <div class="col-12 col-md-9 mt-3">
        <div class="row">
            <div class="col-12">
                <partial name="_TopPaginationBar" model="@pages" />
            </div>
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.ActionLink("Nazwa", "Index", new { search = ViewBag.SearchPhrase, sortOrder = ViewBag.NameSortOrder, pageSize = ViewBag.PageSize}, new {@class = ViewBag.NameIconClass})
                    </th>
                    <th>
                        @Html.ActionLink("Dodane przez", "Index", new { search = ViewBag.SearchPhrase, sortOrder = ViewBag.AuthorSortOrder, pageSize = ViewBag.PageSize}, new {@class = ViewBag.AuthorIconClass})
                    </th>
                    <th>
                        @Html.ActionLink("Data dodania", "Index", new { search = ViewBag.SearchPhrase, sortOrder = ViewBag.DateSortOrder, pageSize = ViewBag.PageSize}, new {@class = ViewBag.DateIconClass})
                    </th>
                    @foreach(var item in Model)
                    {
                        @if (item.IsEditable)
                        {
                            <th>Akcje</th>
                        }
                        break;
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedBy)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedTime)
                    </td>
                    @if(item.IsEditable)
                    {
                        <td>
                            <a title="to do" class="btn btn-outline-primary btn-sm" asp-controller="Ingridient" asp-action="Index"><i class="bi bi-pencil"></i></a> 
                            <a title="to do" class="btn btn-outline-danger btn-sm" asp-controller="Ingridient" asp-action="Index"><i class="bi bi-trash"></i></a> 
                        </td>
                    }
                </tr>
                }
            </tbody>
        </table>
        <div class="row">
            <div class="col-12">
                <partial name="_BottomPaginationBar" model="@pages" />
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/Pagination/Pages.js"></script>
}
